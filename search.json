[{"path":"https://rchaput.github.io/acronymsdown/articles/acronymsdown.html","id":"adding-the-pandoc-argument","dir":"Articles","previous_headings":"","what":"Adding the Pandoc argument","title":"Introduction to acronymsdown","text":"features acronymsdown implemented Pandoc Lua Filter, must registered Pandoc adding Pandoc argument, YAML metadata document: previous example, pdf_document used output format, acronymsdown compatible output format, html_document, even formats provided libraries, bookdown::git_book. several output formats defined YAML metadata, simply duplicate pandoc_args field . example:","code":"--- output:   pdf_document:     pandoc_args: !expr acronymsdown::add_filter() --- --- output:   pdf_document:     pandoc_args: !expr acronymsdown::add_filter()   bookdown::git_book:     pandoc_args: !expr acronymsdown::add_filter() ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/acronymsdown.html","id":"defining-acronyms","dir":"Articles","previous_headings":"","what":"Defining acronyms","title":"Introduction to acronymsdown","text":"Prior using acronyms RMarkdown document, must defined YAML metadata. acronym defined : key, used refer acronym throughout document ; short name, usually acronym ; long name, usually acronym stands . make list less verbose, key provided, acronymsdown uses short name default key acronym. following example defines 2 acronyms:","code":"--- acronyms:   keys:     - shortname: Rmd       longname: Rmarkdown document     - key: yaml       shortname: YAML       longname: YAML Ain't Markup Language ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/acronymsdown.html","id":"using-acronyms","dir":"Articles","previous_headings":"","what":"Using acronyms","title":"Introduction to acronymsdown","text":"Finally, insert acronym document, simply use \\acr{<KEY>}, <KEY> acronym’s key, defined YAML metadata. command automatically replaced acronymsdown. result depends chosen style (see vignette(\"styles\") details). styles also make difference first use, next occurrences. default, acronymsdown replace follows: first use: <long name> (<short name>) next uses: <short name> next lines show example acronymsdown replaces acronyms document, assuming acronyms Rmd yaml defined, per previous example. RMarkdown document (Rmd) allows easily write technical content. Rmd uses YAML Ain’t Markup Language (YAML) metadata.","code":"\\acr{Rmd} allows to easily write technical content. \\acr{Rmd} uses \\acr{yaml} for the metadata."},{"path":"https://rchaput.github.io/acronymsdown/articles/acronymsdown.html","id":"complete-example","dir":"Articles","previous_headings":"","what":"Complete example","title":"Introduction to acronymsdown","text":"complete example showing previous instructions single file can found . generally, tests defined Rmarkdown documents rendered Pandoc using acronymsdown compared known (expected) result. , also serve examples various features options.","code":""},{"path":"https://rchaput.github.io/acronymsdown/articles/acronymsdown.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Introduction to acronymsdown","text":"current vignette gives tools simple document, using (sane) defaults provided acronymsdown. However, mechanisms highly configurable offer various options. advanced usage covered vignette(\"advanced_usage\"), available options described vignette(\"options\"). vignette(\"styles\") lists different styles can used, along small example visualize .","code":""},{"path":"https://rchaput.github.io/acronymsdown/articles/advanced_usage.html","id":"using-other-pandoc-arguments","dir":"Articles","previous_headings":"","what":"Using other Pandoc arguments","title":"Advanced usage","text":"default syntax, pandoc_args: !expr acronymsdown::add_filter() effective getting quickly set , allow registering Pandoc arguments. arguments necessary, example wrap=preserve, alternative syntax can used specify arguments list: vignette(\"acronymsdown\"), please note pdf_document used example. output formats can used, multiple output formats declared metadata, pandoc_args list duplicated. arguments may different format, exception !expr acronymsdown::add_filter() used formats. example:","code":"--- output:   pdf_document:     pandoc_args:      - !expr acronymsdown::add_filter()      - --wrap=preserve      - Other arguments here... --- --- output:   pdf_document:     - !expr acronymsdown::add_filter()     - --wrap=preserve   html_document:     - !expr acronymsdown::add_filter()     - --shift-heading-level-by=1 ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/advanced_usage.html","id":"defining-acronyms-in-external-files","dir":"Articles","previous_headings":"","what":"Defining acronyms in external file(s)","title":"Advanced usage","text":"Whereas defining acronyms directly YAML metadata straightforward way, acronymsdown also support reading definitions one (several) pseudo-YAML file. , simply specify file path fromfile attribute YAML metadata. behaviour particularly useful want define acronyms file multiple projects, generate automatically, similar way .bib files LaTeX citations. attribute may either single path, example: list paths, example: Note path may either absolute relative. path relative, resolved respect current working directory Pandoc. default, using rmarkdown, working directory set directory containing source Rmd file. examples, thus assume acronyms.yml (respectively, acronyms1.yml acronyms2.yml) live folder Rmd document. content files must following: Please note format really YAML~; instead, files read Markdown documents , hence presence --- fences. However, metadata specifically acronyms.keys field used. option taken account. eventual document body ignored well. acronyms read following order: Acronyms acronyms.key field source Rmd document, sequential order. Files read sequential order. Acronyms inside file also read sequential order. order meaningful 2 cases: duplicate key found, behaviour (keep replace) depends order acronyms read. initial sorting used, List Acronyms displays acronyms order defined.","code":"--- acronyms:   fromfile: ./acronyms.yml --- --- acronyms:   fromfile:     - ./acronyms1.yml     - ./acronyms2.yml --- --- acronyms:   keys:     # Define your keys here     - shortname: Rmd       longname: RMarkdown document ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Available options","text":"following example gives overview available options, along default values.","code":"--- acronyms:   loa_title: \"List of Acronyms\"   include_unused: true   insert_beginning: true   insert_links: true   id_prefix: \"acronyms_\"   sorting: \"alphabetical\"   non_existing: \"key\"   style: \"long-short\"   fromfile:     - ./acronyms.yml ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"loa_title","dir":"Articles","previous_headings":"","what":"loa_title","title":"Available options","text":"Acronymsdown can generate List Acronyms (LoA) automatically insert document. option controls title (header) precedes list. default, set List Acronyms. may override change title. Another available behaviour disable creation header, setting value \"\" (empty string). particularly useful want control exactly insert List Acronyms. case, List Acronyms still generated inserted, without preceding header. Examples: set title “Glossary”: disable title:","code":"--- acronyms:   loa_title: \"Glossary\" --- --- acronyms:   loa_title: \"\" ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"include_unused","dir":"Articles","previous_headings":"","what":"include_unused","title":"Available options","text":"option controls whether unused acronyms included generated List Acronyms. “unused acronym” acronym defined YAML metadata, key appear \\acr{key} inside document body. option accepts boolean values: either true (default), false. particularly useful want define possible acronyms (e.g., documents), actually use want clutter List Acronyms. Examples: remove unused acronyms List Acronyms:","code":"--- acronyms:   include_unused: false ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"insert_beginning","dir":"Articles","previous_headings":"","what":"insert_beginning","title":"Available options","text":"default, acronymsdown generates List Acronyms automatically includes beginning document, .e., first block. Depending desired document structure, behaviour might wanted. case, option can used disable . still want make acronymsdown automatically generate List Acronyms, insert somewhere else (e.g., preface), can use option conjunction \\printacronyms command. command, must used inside document’s body, replaced acronymsdown List Acronyms. Note: due way Pandoc Lua Filters work, \\printacronyms needs used exactly -, inside paragraph, nothing else paragraph. Otherwise, recognized. Examples: disable automatic insertion List Acronyms: generate insert List Acronyms want:","code":"--- acronyms:   insert_beginning: false --- Some text for demonstration...  \\printacronyms  And some text after. Note that nothing else is in the same paragraph as `\\printacronyms`."},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"insert_links","dir":"Articles","previous_headings":"","what":"insert_links","title":"Available options","text":"Acronyms can linked definition List Acronyms order make navigation easier readers. option controls whether automatically insert links: accepts boolean values (default, true). Examples: disable behaviour (acronyms inserted plain texts):","code":"--- acronyms:   insert_links: false ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"id_prefix","dir":"Articles","previous_headings":"","what":"id_prefix","title":"Available options","text":"acronyms linked definition (see insert_links), use unique ID . ensure IDs stay unique, composed common prefix acronym’s key. option controls prefix used, default set \"acronyms_\". means , example, acronym key YAML use following ID: acronyms_YAML. Additionally, List Acronyms’ title (inserted, refer loa_title option details) ID well, composed prefix followed \"HEADER_LOA\", example: acronyms_HEADER_LOA. find , reason, one IDs conflict another ID document, can use option change prefix. Note: Since option used create IDs, contain special character (emoji, punctuation, …). Examples: set prefix “my_acronyms_”:","code":"--- acronyms:   id_prefix: \"my_acronyms_\" ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"sorting","dir":"Articles","previous_headings":"","what":"sorting","title":"Available options","text":"option controls sorting criterion used automatically sort List Acronyms generated, .e., order acronyms displayed list. Several values available: alphabetical (default): Acronyms sorted short name, alphabetical order. means , example, acronym “Rmd” sorted “YAML” (R < Y). initial: Acronyms displayed exact order defined YAML metadata. somewhat equivalent sorting list. usage: Acronyms sorted order appear (.e., first used) document body. example, \\acr{YAML} \\acr{Rmd} means “YAML” appears “Rmd”. Warning: sorting used, include_unused option must set false. Otherwise, acronymsdown raise error, since sort acronyms never used. Examples: sort order appearance document: sort order definition YAML metadata:","code":"--- acronyms:   sorting: usage   include_unused: false --- --- acronyms:   sorting: initial ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"non_existing","dir":"Articles","previous_headings":"","what":"non_existing","title":"Available options","text":"option controls dot acronymsdown finds acronym doesn’t exist, .e., key defined. default behaviour log warning replace used key, document may still readable. example, assuming “Rmd” key never defined YAML metadata, line: rendered : > Rmd can used write technical documents. following warning also printed standard error (stderr): [WARNING][acronymsdown] Acronym key Rmd recognized Available values : key: default behaviour, logs warning replaces command used key . ??: Logs warning replaces command “??”. behaviour similar Biblatex achieves LaTeX unknown citation key found. error: Stops parsing raising error. Examples: visually identify non-existing acronyms used: case, previous example rendered : ?? can used write technical documents. stop parsing absolutely avoid using non-existing acronyms:","code":"\\acr{Rmd} can be used to write technical documents. --- acronyms:   non_existing: \"??\" --- --- acronyms:   non_existing: error ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"on_duplicate","dir":"Articles","previous_headings":"","what":"on_duplicate","title":"Available options","text":"option controls two () acronyms defined key. default, acronymsdown prints warning standard error (stderr), keeps old acronym database (new acronym thus dropped). Several values available: warn (default) replace: warning issued, old acronym replaced new one. keep: warning issued, old acronym kept. error: Raises descriptive error, stops parsing. Examples: following examples, consider following acronyms definitions YAML metadata: always replace duplicates: \\acr{Rmd} rendered 2nd definition (Rmd) always keep duplicates without warning: \\acr{Rmd} rendered 1st definition (Rmd) always avoid duplicates raising error:","code":"--- acronyms:   keys:     - shortname: Rmd       longname: 1st definition     - shortname: Rmd       longname: 2nd definition --- --- acronyms:   on_duplicate: replace --- --- acronyms:   on_duplicate: keep --- --- acronyms:   on_duplicate: error ---"},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"fromfile","dir":"Articles","previous_headings":"","what":"fromfile","title":"Available options","text":"default, acronymsdowns expect find acronyms definitions inside YAML metadata~; however, can use fromfile specify external YAML files acronyms loaded. usage described details vignette(\"advanced_usage\").","code":""},{"path":"https://rchaput.github.io/acronymsdown/articles/options.html","id":"style","dir":"Articles","previous_headings":"","what":"style","title":"Available options","text":"Acronymsdown supports several styles replace acronyms, similarly LaTeX package glossaries work abbreviations. Styles define render acronym document body: fields use, order, emphasis , different style whether acronym’s first use , etc. list available styles, along visualization , displayed vignette(\"styles\").","code":""},{"path":"https://rchaput.github.io/acronymsdown/articles/styles.html","id":"long-short","dir":"Articles","previous_headings":"","what":"long-short","title":"Styles","text":"First use: RMarkdown document (Rmd) Next uses: Rmd","code":""},{"path":"https://rchaput.github.io/acronymsdown/articles/styles.html","id":"short-long","dir":"Articles","previous_headings":"","what":"short-long","title":"Styles","text":"First use: Rmd (RMarkdown document) Next uses: Rmd","code":""},{"path":"https://rchaput.github.io/acronymsdown/articles/styles.html","id":"short-footnote","dir":"Articles","previous_headings":"","what":"short-footnote","title":"Styles","text":"First use: Rmd1 Next uses: Rmd","code":""},{"path":"https://rchaput.github.io/acronymsdown/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"remy chaput. Maintainer.","code":""},{"path":"https://rchaput.github.io/acronymsdown/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chaput R (2022). acronymsdown: Acronyms Glossaries Support RMarkdown. https://rchaput.github.io/acronymsdown, https://github.com/rchaput/acronymsdown.","code":"@Manual{,   title = {acronymsdown: Acronyms and Glossaries Support for RMarkdown},   author = {Remy Chaput},   year = {2022},   note = {https://rchaput.github.io/acronymsdown, https://github.com/rchaput/acronymsdown}, }"},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"acronymsdown-list-of-acronyms-support-for-rmarkdown-documents","dir":"","previous_headings":"","what":"Acronyms and Glossaries Support for RMarkdown","title":"Acronyms and Glossaries Support for RMarkdown","text":"Author: rchaput rchaput.pro@gmail.com","code":""},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Acronyms and Glossaries Support for RMarkdown","text":"package adds ability automatically handle acronyms inside RMarkdown (Rmd) documents. Throughout document, acronyms replaced either short name, long name, depending whether appear first time. also may linked corresponding definition automatically generated List Acronyms, readers can access definition one click. package documentation can found online https://rchaput.github.io/acronymsdown, directly R console using vignette(\"acronymsdown\").","code":""},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Acronyms and Glossaries Support for RMarkdown","text":"Tired manually check whether first occurrence acronym correctly explained readers? acronymsdown automatically replaces acronyms, based whether appear first time. place list generated can specified (default, beginning document). can choose alphabetical, usage initial order. Choose multiple styles replace acronyms. default, 1st occurrence replaced long name (short name), following occurrences simply replaced short name. occurrences can also linked acronym’s definition List Acronyms. Define acronyms directly document external files. package’s mechanisms can configured: handle duplicate keys, whether raise error, print warning ignore non-existing key, sort, … Sane defaults included, package can used ---box.","code":""},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Acronyms and Glossaries Support for RMarkdown","text":"package available GitHub, therefore need install remotes first: Alternatively, can also use devtools: Note package requires rmarkdown package (already writing Rmd documents). also requires least Pandoc >= “2.0”, either installed system bundled RStudio.","code":"# Install the remotes package to install packages directly from GitHub install.packages(\"remotes\") # Now, install the acronymsdown package from GitHub remotes::install_github(\"rchaput/acronymsdown\") install.packages(\"devtools\") devtools::install_github(\"rchaput/acronymsdown\")"},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Acronyms and Glossaries Support for RMarkdown","text":"Using package requires 3 simple steps: Setup custom Pandoc arguments document output format YAML metadata. pandoc_args: !expr acronymsdown::add_filter() Define acronyms YAML metadata. finally, use acronyms Rmd document \\acr{<KEY>} special command! \\acr{Rmd} can used write technical content. \\acr{Rmd} uses \\acr{YAML}. Please refer Get started (vignette(\"acronymsdown\")) guide details.","code":"--- acronyms:   key:     - shortname: Rmd       longname: RMarkdown     - shortname: YAML       longname: YAML Ain't Markup Language"},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"faq","dir":"","previous_headings":"","what":"FAQ","title":"Acronyms and Glossaries Support for RMarkdown","text":"Q: examples use ? : automated tests designed Rmd documents also serve examples various configurations. sub-directories specific example, input.Rmd source Rmd document, expected.md expected result. Q: Readme shows example pdf_document output format, tests use md_document, formats available? : long possible inject custom Pandoc arguments output format, acronymsdown work. particular, one can use bookdown formats, something like: course, bookdown::gitbook: can replaced bookdoown::pdf_book:, bookdown::html_book:, even formats packages. Q: Can use without RMarkdown? : package’s features actually implemented Pandoc Lua Filter, means can used “pure” Pandoc, without requiring use RMarkdown. , simply pass additional arguments directly Pandoc: /path//parse-acronyms.lua path parse-acronyms.lua script. acronymsdown package installed, can use R method system.file(\"parse-acronyms.lua\", package = \"acronymsdown\") get path file system. can also download Lua files (inst/ folder) directly, store convenient location system. Note: must download Lua files store folder! Otherwise, Lua raise error. “main” script, must loaded Pandoc, parse-acronyms.lua.","code":"--- output:   bookdown::gitbook:     pandoc_args: !expr acronymsdown::add_filter() --- pandoc --lua-filter /path/to/parse-acronyms.lua input.md"},{"path":"https://rchaput.github.io/acronymsdown/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Acronyms and Glossaries Support for RMarkdown","text":"package inspired : issue bookdown ; lua filter sort definition list ; pagedown’s insertion List Figures/Tables ; pandoc-abbreviations filter","code":""},{"path":"https://rchaput.github.io/acronymsdown/reference/add_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Acronyms and Glossaries support in RMarkdown — add_filter","title":"Acronyms and Glossaries support in RMarkdown — add_filter","text":"method allows easily register parse-acronyms Lua filter RMarkdown document. filter ultimately responsible every functionality package: loading list acronyms, creating glossary document, linking acronyms definition.","code":""},{"path":"https://rchaput.github.io/acronymsdown/reference/add_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acronyms and Glossaries support in RMarkdown — add_filter","text":"","code":"add_filter(error = TRUE)"},{"path":"https://rchaput.github.io/acronymsdown/reference/add_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acronyms and Glossaries support in RMarkdown — add_filter","text":"error Whether raise error required version pandoc found","code":""},{"path":"https://rchaput.github.io/acronymsdown/reference/add_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Acronyms and Glossaries support in RMarkdown — add_filter","text":"string representing pandoc argument loads Lua filter. string following format: '--lua-filter=/path//parse-acronyms.lua'.","code":""},{"path":"https://rchaput.github.io/acronymsdown/reference/add_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Acronyms and Glossaries support in RMarkdown — add_filter","text":"main purpose function used inside YAML metadata RMarkdown document. Specifically, added output.<format name>.pandoc_args field, <format name> name desired output format, e.g., pdf_document, bookdown::html_book, etc. several output formats used, pandoc_args duplicated formats. method largely inspired rmdfiltr https://github.com/crsh/rmdfiltr/","code":""},{"path":"https://rchaput.github.io/acronymsdown/reference/add_filter.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Acronyms and Glossaries support in RMarkdown — add_filter","text":"pandoc_args support several syntaxes, shown . Since add_filter returns single string, can combined arguments. Note !expr must used execute function insert result YAML. simply use add_filter sole argument: allow using arguments: several output formats:","code":"--- output:   html_document:     pandoc_args: !expr acronymsdown::add_filter() --- --- output:   html_document:     pandoc_args:       - !expr acronymsdown::add_filter()       - additional arguments here ... --- --- output:   html_document:     pandoc_args:       - !expr acronymsdown::add_filter()   bookdown::pdf_book:     pandoc_args:       - !expr acronymsdown::add_filter() ---"}]
