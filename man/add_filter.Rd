% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_filter.R
\name{add_filter}
\alias{add_filter}
\title{Acronyms and Glossaries support in RMarkdown}
\usage{
add_filter(error = TRUE)
}
\arguments{
\item{error}{Whether to raise an error if the required version of pandoc
is not found}
}
\value{
A string representing the pandoc argument that loads the Lua
filter. The string will have the following format:
\code{'--lua-filter=/path/to/parse-acronyms.lua'}.
}
\description{
This method allows to easily register the \strong{parse-acronyms} Lua filter
in a \emph{RMarkdown} document.
This filter is ultimately responsible for every functionality of this
package: loading the list of acronyms, creating the glossary in the
document, and linking acronyms to their definition.
}
\details{
The main purpose of this function is to be used inside the \emph{YAML} metadata
of a \emph{RMarkdown} document.

Specifically, it should be added in the
\verb{output.<format name>.pandoc_args} field, where
\verb{<format name>} is the name of your desired output format,
e.g., \code{pdf_document}, \code{bookdown::html_book}, etc.

If several output formats are used, \code{pandoc_args} should be duplicated
for each of the formats.

This method is largely inspired from
\href{https://github.com/crsh/rmdfiltr/}{rmdfiltr}
}
\section{Examples}{
\code{pandoc_args} support several syntaxes, which are shown below.
Since \code{add_filter} returns a single string, it can be combined with
other arguments.

Note that \code{!expr} must be used to execute the function and insert its
result in the \emph{YAML}.

To simply use \code{add_filter} as the sole argument:
\preformatted{
---
output:
  html_document:
    pandoc_args: !expr acronymsdown::add_filter()
---
}

To allow using other arguments:
\preformatted{
---
output:
  html_document:
    pandoc_args:
      - !expr acronymsdown::add_filter()
      - additional arguments here ...
---
}

With several output formats:
\preformatted{
---
output:
  html_document:
    pandoc_args:
      - !expr acronymsdown::add_filter()
  bookdown::pdf_book:
    pandoc_args:
      - !expr acronymsdown::add_filter()
---
}
}

